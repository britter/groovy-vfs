
import org.apache.tools.ant.filters.ReplaceTokens

group = 'org.ysb33r.groovy'
archivesBaseName = 'groovy-vfs-smb-provider'

ext {
    moduleName = 'groovy-vfs-smb-provider'
    bintrayDescription = 'An SMB provider for Groovy VFS'
    bintrayTags = ['groovy', 'vfs', 'smb', 'cifs']
    bintrayLicense = 'LGPL-2.1'
}

dependencies {
    compile group: 'org.codehaus.groovy',   name: 'groovy-all', version: groovyVer
    compile "org.apache.commons:commons-vfs2:${vfsVersion}"
    compile 'jcifs:jcifs:1.3.17'

    testCompile project(':dsl')
    testCompile fileTree( dir : "${project(':jlan').buildDir}/libs", include: '*.jar' )
}

manifest {
    attributes 'Implementation-Title': 'Groovy VFS SMB Provider', 'Implementation-Version': version
}

test {
    systemProperties 'JLANCONFIG' : new File(buildDir,'tmp/jlanserver.xml').absolutePath
    systemProperties 'SMBPORT' : 1139
    systemProperties 'TESTFSWRITEROOT' : new File(projectDir,'build/tmp').absolutePath
    systemProperties 'ROOT' : projectDir.absolutePath


    doFirst {
        copy {
            from (new File(projectDir,'src/test/resources')) {
                include 'jlanserver.xml'
                filter(ReplaceTokens,tokens:[PROJECTDIR:projectDir.absolutePath])
            }
            into new File(buildDir,'tmp')
        }
    }
}

// If operating system is Windows add jni path
if(org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    test.environment 'PATH', test.getEnvironment()['PATH'] + ';' + new File(buildDir,'alfresco/jni').absolutePath
}

compileTestGroovy {
    dependsOn ':jlan:jar'
}



apply from : '../gradle/publish.gradle'

