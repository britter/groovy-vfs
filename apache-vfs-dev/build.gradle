buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'
    }
}

repositories {
    jcenter()
//    mavenCentral()
}

apply plugin: 'provided-base'
apply plugin: 'java'

version = '2.1-GROOVYFS'
sourceCompatibility = '1.6'

ext {
    baseSrcDir = "${projectDir}/commons-vfs/core"

    depsFromPom = { ->
        def parentPom = new XmlSlurper().parse(new File("${baseSrcDir}/../pom.xml"))
        def pom = new XmlSlurper().parse(new File("${baseSrcDir}/pom.xml"))
        def deps = [:]
        pom.dependencies.children().collect {
            def sc = 'compile'
            if(it?.scope == 'test') {
                sc = 'testCompile'
            } else if (it?.provided) {
                sc = 'provided'
            } else if (it?.optional) {
                sc = 'optional'
            }
            def key = "${it.groupId}:${it.artifactId}".toString()

            deps[key] = [  scope : sc ]
        }

        parentPom.dependencyManagement.dependencies.children().each {
            def key = "${it.groupId}:${it.artifactId}".toString()
            if(deps[key]) {
                deps[key].version = it.version
            }
        }

        deps
    }
}

sourceSets {
    main {
        java {
            srcDirs "${baseSrcDir}/src/main/java"
        }
        resources {
            srcDirs "${baseSrcDir}/src/main/resources"
        }
    }
    test {
        java {
            srcDirs "${baseSrcDir}/src/test/java"
        }
        resources {
            srcDirs "${baseSrcDir}/src/test/resources"
        }
    }
}

dependencies {
    depsFromPom().each { key,map ->
        String dep = "${key}:${map.version}"
        println "*** ${dep}"

//        if(d?.scope == 'test') {
//            testCompile dep
//        } else if (d?.provided) {
//            provided dep
//        } else if (d?.optional) {
//            optional dep
//        } else {
//            compile dep
//        }

        "${map.scope}" dep
    }
}

// TODO: Add -Xlint:deprecation to compile
// TODO: Add LICENSE, NOTICE to jar (metaInf)