// ============================================================================
// (C) Copyright Schalk W. Cronje 2012 - 2014
//
// This software is licensed under the Apache License 2.0
// See http://www.apache.org/licenses/LICENSE-2.0 for license details
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is
// distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and limitations under the License.
// ============================================================================

import org.ysb33r.gradle.bintray.BintrayGenericUpload

import javax.print.attribute.standard.Compression

apply plugin : 'application'

group = 'org.ysb33r.groovy'
archivesBaseName = 'cmdline-vfs'
mainClassName = 'org.ysb33r.groovy.vfs.app.Run'
applicationName = 'vfs'
applicationDefaultJvmArgs=["-Dvfs.scriptname=${applicationName}"]
bintrayRepo = 'nanook'

jar {
    manifest {
        attributes 'Implementation-Title': 'VFS Command-line Utility', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    //maven { url 'https://oss.jfrog.org/artifactory/libs-snapshot' }
}   

dependencies {
    compile group: 'org.codehaus.groovy',   name: 'groovy-all', version: '2.2+', classifier: 'indy'
    compile 'commons-cli:commons-cli:1.2'
    runtime 'commons-io:commons-io:2.4'
    runtime 'commons-net:commons-net:3.+'
    runtime 'commons-httpclient:commons-httpclient:3.1'
    runtime 'org.slf4j:slf4j-simple:1.7.5'
    runtime 'com.jcraft:jsch:0.1.48'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    compile project(':dsl')
}

test {
    systemProperties TESTFSREADROOT : "${projectDir}/src/test/resources"
    systemProperties TESTFSWRITEROOT : "${buildDir}/tmp/test/cmdline-vfs"
}

//distTar {
//    extension = 'tgz'
//    compression = Compression.GZIP
//}

// TODO: Need tasks:
//  - something to zip src
//  - build documentation (from asciidoc) and create man page

task uploadArchives (type:BintrayGenericUpload ) {
    username    project.properties.bintrayUserName
    apiKey      project.properties.bintrayApiKey
    repoOwner   bintrayUser
    repoName    bintrayRepo
    packageName 'vfs'
    sources distZip.outputs.files
    sources distTar.outputs.files

    dependsOn distZip, distTar

    onlyIf { !version.endsWith("SNAPSHOT") }
}




