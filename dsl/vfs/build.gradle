// ============================================================================
// (C) Copyright Schalk W. Cronje 2012
//
// This software is licensed under the Apche License 2.0
// See http://www.apache.org/licenses/LICENSE-2.0 for license details
// ============================================================================

import groovyx.net.http.HTTPBuilder
import static groovyx.net.http.ContentType.JSON
import static groovyx.net.http.Method.GET
import static groovyx.net.http.Method.POST

apply plugin: 'groovy'
apply plugin: 'eclipse'

buildscript {
    repositories {
        mavenRepo(url: 'http://jcenter.bintray.com')
    }
    dependencies {
        classpath 'org.codehaus.groovy.modules.http-builder:http-builder:0.6+'
    }
}

group = 'org.ysb33r.groovy.dsl' 

def bintray_api_base_url = 'https://api.bintray.com'
def bintray_repo = 'grysb33r'
def bintray_package = 'groovy-vfs'


if (project.properties.BUILD_FOR_JAVA6) {
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
    version = '0.9-JAVA6-SNAPSHOT'
} else {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
    //version = '0.9-SNAPSHOT'
    version = '0.01'
}


jar {
    manifest {
        attributes 'Implementation-Title': 'Groovy VFS', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}   

dependencies {
    if (project.properties.BUILD_FOR_JAVA6) {
        groovy group: 'org.codehaus.groovy', name: 'groovy', version: '2.+'         
        compile group: 'org.codehaus.groovy',   name: 'groovy-all', version: '2.+'
    } else {
	    groovy group: 'org.codehaus.groovy', name: 'groovy', version: '2.+', classifier: 'indy'
        compile group: 'org.codehaus.groovy',   name: 'groovy-all', version: '2.+', classifier: 'indy'
    }
	compile group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.5+'
	compile group: 'org.apache.commons',    name: 'commons-vfs2', version: '2.0'
	compile group: 'commons-logging',       name: 'commons-logging', version:'1.1+'
	compile group: 'commons-net',           name: 'commons-net', version: '3.+'
	compile group: 'commons-httpclient',    name: 'commons-httpclient', version:'3.1'
	compile group: 'com.jcraft',            name: 'jsch', version:'0.1.48'
	compile group: 'org.apache.jackrabbit', name: 'jackrabbit-core', version: '2.5.2'
	
 /*
	Commons Collections Version 3.1 	LRU Cache (optional)
	Apache Jackrabbit Version 1.5.2 or later 	WebDAV
	jCIFS Version 0.8.3 or later. 	CIFS (VFS sandbox)
	javamail Version 1.4
*/	
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

/*
test {
    systemProperties 'property': 'value'
}
*/

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar 
    //TODO: archives javadocJar
}



// FROM: https://github.com/bintray/bintray-examples/blob/master/gradle-example/build.gradle
task createBintrayPackage << {
    def http = new HTTPBuilder(bintray_api_base_url)
    http.auth.basic bintrayUserName, bintrayApiKey
    http.request(GET, JSON) {
        uri.path = '/packages/' + bintrayUserName + '/' + bintray_repo + '/' + bintray_package
        response.'404' = {
            http = new HTTPBuilder(bintray_api_base_url)
            http.auth.basic bintrayUserName, bintrayApiKey
            http.request(POST, JSON) {
                uri.path = '/packages/' + bintrayUserName + '/' + bintray_repo
                body = [name: bintray_package, desc: 'auto', desc_url: 'auto', labels: ['groovy', 'vfs']]

                response.success = { resp ->
                    println 'Created!!!'
                }
            }
        }
    }
}


uploadArchives {
    repositories {
        
/*        mavenDeployer {
            repository(url: bintray_api_base_url + '/maven/' + bintrayUserName + '/' + bintray_repo + '/' + bintray_package ) {
                authentication(userName: bintrayUserName, password: bintrayApiKey)
            }
            pom.version = version
            pom.artifactId = 'vfs'
        }
*/     
           
        ivy {
            
            url bintray_api_base_url + '/content/' + bintrayUserName + '/' + bintray_repo + '/' + bintray_package + '/' + version
            
            credentials {
                username bintrayUserName
                password bintrayApiKey
            }
        }    

    }
}

uploadArchives.dependsOn createBintrayPackage

